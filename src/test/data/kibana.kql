集群相关

查询集群健康状态
GET _cluster/health

查询所有节点
GET _cat/nodes

查询索引及分片的分布
GET _cat/shards

查询所有插件
GET _cat/plugins


索引相关查询

查询所有索引及容量
GET _cat/indices

DELETE book_index_demo
查询索引映射结构
                                              GET book_index_demo/_mapping

查询所有索引映射结构
GET _all

查询所有的相同前缀索引

GET book_index_demo/_search

查询所有索引模板
GET _template




1.查询所有数据
GET book_index_demo/_search
{
  "query": {
    "match_all": {}
  }
}

2.查询指定字段下的数据，直接用match
GET book-1/_search
{
  "query": {
    "match": {
      "id": 4
    }
  }
}



3.当同一个属性满足逻辑或时的查询，用bool和should
GET book_index_demo/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "match": {
            "userId": 2
          }
        },
        {
          "match": {
            "price": 33.33
          }
        }
      ]
    }
  }
}





4.多条件查询 用bool和must ???
POST book_index_demo/_search，
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "userId": 4
          }
        },
        {
          "match": {
            "price": 33.33
          }
        }
      ]
    }
  }
}




GET book_index_demo/_search
{
  "query": {
    "terms": {
      "id": [ 4, 2],
      "boost": 1.0
    }
  }
}






GET book_index_demo/_search
{
  "query": {
    "match_all": {}
  }
}











GET /book_index_demo/_mapping




























GET book_index_demo/_search
{
    "query": {
        "bool" : {
            "filter" : {
                "script" : {
                    "script" : {
                        "source": "doc['price'].value > 40",
                        "lang": "painless"
                     }
                }
            }
        }
    }
}

































GET book-1/_search
{
  "query": {
    "bool": {
      "must":     { "match": { "title": "quick" }},
      "must_not": { "match": { "title": "lazy"  }},
      "should": [
                  { "match": { "title": "brown" }},
                  { "match": { "title": "dog"   }}
      ]
    }
  }
}















5.范围查询并进行排序，用range：gte和lte指定范围，再用sort：asc和desc排序
GET book_index_demo/_search
{
  "query": {
    "range": {
      "price": {
        "gte": 10,
        "lte": 70
      }
    }
  },
  "sort": [
    {
      "price": {
        "order": "asc"
      }
    }
  ]
}




































6.聚合查询
（1）固定用到size和aggs，field后面输入属性，from和to后边输入要分段的范围
GET book_index_demo/_search
{
  "size": 2,
  "aggs": {
    "priceAggregations": {
      "range": {
        "field": "price",
        "ranges": [
          {
            "from": 1,
            "to": 30
          },{
            "from": 5,
            "to": 9
          },{
            "from": 40,
            "to": 70
          }
        ]
      }
    }
  }
}




























PUT book-index
{
  "mappings": {
    "_": {
      "properties": {
        "updated_date": {
          "type":   "date",
          "format": "yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"
        }
      }
    }
  }
}



DELETE http://localhost:9200/test/?pretty=true -d ''


PUT http://localhost:9200/test/?pretty=true -d ''

GET book-1/_search
{
    "query": {
        "bool" : {
            "filter" : {
                "script" : {
                    "script" : {
                        "source": "doc['num1'].value > 1",
                        "lang": "painless"
                     }
                }
            }
        }
    }
}


POST _sql?format=txt
{
  "query": """
  SELECT content,name,price FROM "book_index_demo" where price > 10 order by price asc
  """
}









